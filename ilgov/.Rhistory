libraries("tidyverse")
library("tidyverse")
install.packages("tidyverse")
library(tidyverse)
?quantiles
?quantile
?ecdf
a <- rnorm(10)
b <- rnorm(10)
plot(a, b)
myVarHiSteph <- rnorm(19)
plot(a, myVarHiSteph)
myVarHiSteph <- rnorm(10)
plot(a, myVarHiSteph)
2284/60
2284/60/60
source('~/Downloads/DS Salary Estimator.R', echo=TRUE)
setwd("ILGov2018/shinyapp/ilgov/")
setAccountInfo()
library(shiny)
library(dplyr)
library(ggplot2)
library(DT)
library(shinythemes)
library(rsconnect)
library(ggvis)
library(plotly)
install.packages("shinythemes")
library(shinythemes)
install.packages("rsconnect")
install.packages("ggvis")
install.packages("plotly")
install.packages("plotly")
library(ggvis)
library(plotly)
library(DT)
setAccountInfo()
install.packages("shiny")
install.packages("shiny")
library(shiny)
setAccountInfo()
library("rsconnect", lib.loc="~/Library/R/3.3/library")
setAccountInfo()
?setAccountInfo
rsconnect::setAccountInfo(name='skirmer', token='DF46466029D59961127C23B9CC1A37DB', secret='rzpajR7Xd7wrhFpmZ7/P3gSSgWMz5iu/OBt6Qml4')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github("datadotworld/data.world-r", build_vignettes = TRUE, force = TRUE)
myquery <- data.world::qry_sql("SELECT * FROM Tables")
testdata <- data.world::query(myquery, "lilianhj/ilgov-2018/")
data.world::set_config(data.world::save_config(auth_token = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnNraXJtZXIiLCJpc3MiOiJhdXRob3JpdHk6ZGF0YWRvdHdvcmxkOjowQkYwRUJEMy0yREU3LTQ5RkItQjg3Qi1BRDAzMDU3QkI4OUUiLCJpYXQiOjE0OTcwMzQyMDksInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIiwidXNlciJdLCJleHAiOjE1MDIyMTgyMDksImdlbmVyYWwtcHVycG9zZSI6dHJ1ZSwiYXV0aG9yaXR5aWRzIjpbImRhdGFkb3R3b3JsZCJdfQ.IVxFMV5Lix4i0H0CyxpcWbqwPNFSF0Gdg_Elagsxo16cYGs45FGXmfbm-f2k90TnfQnBa5DmeZ1tOXtbPGY6zA"))
myquery <- data.world::qry_sql("SELECT * FROM Tables")
testdata <- data.world::query(myquery, "lilianhj/ilgov-2018/")
View(testdata)
myquery <- data.world::qry_sql("SELECT * FROM CanElections")
testdata <- data.world::query(myquery, "lilianhj/ilgov-2018/")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("tm")
shiny::runApp()
library(tm)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github('hadley/ggplot2')
shiny::runApp()
library(ggplot2)
output$table <- DT::renderDataTable(DT::datatable(rownames = FALSE,
{
data <- df2
output$barplot <- renderPlotly({
data2 <- summarize(group_by(data, Alderman, Year),
aggregate = sum(Amount, na.rm=T),
annual_amt = sum(Amount, na.rm=T))
# Render a barplot
plot1 <- ggplot(data2, aes(x=Alderman, y=aggregate, fill=factor(Year), label=annual_amt))+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust=.5),
legend.position = "none")+
geom_bar(stat="identity")+
labs(title = "Donations to Aldermen", x="Alderman", y="Amount of Donations")
#plot1
gp <- ggplotly(plot1, tooltip = c("Alderman","factor(Year)", "annual_amt"))
#gp
#gp %>% layout(margin = list(l=90, r=60, t=60, b=90))
})
if(input$Industry != "All"){
data <- dplyr::filter(data, `Lobbying Firm` == input$Industry)
}
if(input$Alderman != "All") {
data <- dplyr::filter(data, Alderman == input$Alderman)
}
if(input$Year != "All") {
data <- dplyr::filter(data, Year == input$Year)
}
if(input$Funder != "All") {
data <- dplyr::filter(data, Lobbyist == input$Funder)
}
data}))
}
server <- function(input, output) {
#the server - literally what data is going into the plot/viz?
output$table <- DT::renderDataTable(DT::datatable(rownames = FALSE,
{
data <- df2
output$barplot <- renderPlotly({
data2 <- summarize(group_by(data, Alderman, Year),
aggregate = sum(Amount, na.rm=T),
annual_amt = sum(Amount, na.rm=T))
# Render a barplot
plot1 <- ggplot(data2, aes(x=Alderman, y=aggregate, fill=factor(Year), label=annual_amt))+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust=.5),
legend.position = "none")+
geom_bar(stat="identity")+
labs(title = "Donations to Aldermen", x="Alderman", y="Amount of Donations")
#plot1
gp <- ggplotly(plot1, tooltip = c("Alderman","factor(Year)", "annual_amt"))
#gp
#gp %>% layout(margin = list(l=90, r=60, t=60, b=90))
})
if(input$Industry != "All"){
data <- dplyr::filter(data, `Lobbying Firm` == input$Industry)
}
if(input$Alderman != "All") {
data <- dplyr::filter(data, Alderman == input$Alderman)
}
if(input$Year != "All") {
data <- dplyr::filter(data, Year == input$Year)
}
if(input$Funder != "All") {
data <- dplyr::filter(data, Lobbyist == input$Funder)
}
data}))
}
server
shiny::runApp()
install.packages("ggplot2")
library(shiny)
library(dplyr)
library(ggplot2)
library(DT)
library(shinythemes)
library(rsconnect)
library(ggvis)
library(plotly)
library(tm)
shiny::runApp()
